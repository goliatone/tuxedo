#!/usr/bin/env node
'use strict';

// Command Line Parameters
var argv, options, colors, fs;
fs = require('fs');
colors = require('colors');
argv = require('optimist').usage('Usage: tuxedo [options]\n\n tuxedo -t template.jtpl -o output.json -c data.json')
    .demand('t')
    .alias('t', 'template')
    .alias('o', 'output')
    .alias('c', 'context')
    .default('c', false)
    .describe('t', 'path to template file containing mustaches')
    .describe('o', 'path to file containing generated data')
    .describe('c', 'path to JSON context file passed to template engine')
    .argv;

//REVIEW: Should template be argv._ non hyphenated option?
if (argv.help) return argv.showHelp(printLine);

var fakeit = require('../index');

fakeit.on('complete', function(result) {
    if (!argv.output) return printLine('Output is:\n'.yellow + result.green + '\n');
    fs.writeFile(argv.output, result, function(err) {
        if (err) return console.log(err);
        printLine(result.green + '\n');
    });
});

fakeit.on('error', function(result) {
    printLine('Error:\n'.yellow + result.red + '\n');
});

var context = {};
if(argv.context) {
	context.data = fs.readFileSync(argv.context, 'utf8');
	context.data = JSON.parse(context.data);
}

fakeit.fromFile(argv.template, context);


function printLine(line) {
    return process.stdout.write(line + '\n');
}